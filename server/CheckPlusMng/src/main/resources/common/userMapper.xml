<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.peelknight.mybatis.userMapper">
	<select id="selectUser" resultType="kr.peelknight.common.model.CM_User"
		statementType="PREPARED" parameterType="java.util.Map">
		SELECT A.idKey , A.userId        , A.password     , A.userType    , A.userName  ,
			   A.status, A.loginFailCount, A.lastLoginDate, A.lastLoginSeq, A.createDate,
			   B.codeName AS userTypeName,
			   C.codeName AS statusName
		  FROM CM_User A INNER JOIN CM_Code B
							ON B.type = 'USERTYPE'
						   AND A.userType = B.code
						 INNER JOIN CM_Code C
							ON C.type = 'USERSTATUS'
						   AND A.status = C.code 
		 WHERE A.idKey <![CDATA[ > ]]> 0
		<if test="idKey != null">
		   AND A.idKey = #{idKey}
		</if>
		<if test="userId != null">
		   AND A.userId = #{userId}
		</if>
		<if test="userType != null">
		   AND A.userType = #{userType}
		</if>
		<if test="status != null">
		   AND A.status = #{status}
		</if>
		<if test="userName != null">
		   AND A.userName = #{userName}
		</if>
		 ORDER BY A.idKey DESC
		<if test="offset != null and size != null">
		 LIMIT ${offset}, ${size}
		</if>
	</select>
	
	<select id="selectUserPaging" resultType="kr.peelknight.common.model.CM_Paging"
		statementType="PREPARED" parameterType="java.util.Map">
		SELECT COUNT(idKey) as totalCount
		  FROM CM_User
		 WHERE idKey <![CDATA[ > ]]> 0
		<if test="userType != null">
		   AND userType = #{userType}
		</if>
		<if test="status != null">
		   AND status = #{status}
		</if>
	</select>
	
	<insert id="insertUser" parameterType="kr.peelknight.common.model.CM_User"
		statementType="PREPARED" useGeneratedKeys="true" keyProperty="idKey">
		INSERT INTO CM_User (
			userId        , password     , userType    , userName  , status,
			loginFailCount, lastLoginDate, lastLoginSeq, createDate
		) VALUES (
			#{userId}        , #{password}     , #{userType}    , #{userName}  , #{status},
			#{loginFailCount}, #{lastLoginDate}, #{lastLoginSeq}, #{createDate}
		)
	</insert>
	
	<update id="updateUser" parameterType="kr.peelknight.common.model.CM_User"
		statementType="PREPARED">
		UPDATE CM_User
		   SET userId=#{userId},
			   password=#{password},
			   userType=#{userType},
			   userName=#{userName},
			   status=#{status},
			   loginFailCount=#{loginFailCount},
			   lastLoginDate=#{lastLoginDate},
			   lastLoginSeq=#{lastLoginSeq}
		 WHERE idKey=#{idKey}
	</update>

	<delete id="deleteUser" parameterType="kr.peelknight.common.model.CM_User">
		DELETE FROM CM_User
		 WHERE idKey=#{idKey}
	</delete>
</mapper>
